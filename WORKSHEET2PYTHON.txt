                            WORKSHEET 2
                       
                               PYTHON


ANSWERS : -

1. B

2. C

3. A

4. A

5. C

6. C

7. A

8. B

9. B,D

10. A,C,D

11. LIST - A list is a sequence of elements in a specific order. We can access elements with a numerical index, e.g. the_list[3].
           The time taken for several operations such as testing if the list contains an element is O(n), i.e. proportional to the 
           length of the list.

    TUPLE - A tuple is basically an immutable list, meaning you can't add, remove, or replace any elements.

    SET   - A set has no order, but has the advantage over a list that testing if the set contains an element is much faster,
            almost regardless of the size of the set. It also has some handy operations such as union and intersection.


    DICTIONARY - A dictionary is a mapping from keys to values where the keys can be all sorts of different objects, in contrast to lists 
                 where the 'keys' can only be numbers. So we can have the_dict = {'abc': 3, 'def': 8} and then the_dict['abc'] is 3. The
                 keys of a dict are much like a set: they have no order and you can test for their existence quickly.

                 The elements of a set and the keys of a dict must be hashable. Numbers, strings, tuples, and many other things are hashable. 
                 Lists, sets, and dicts are not hashable.

12.  No strings are not mutable in python.

     input = "I+Love+Python"
     output = input.replace("+"," ");
     print(output);

13.  The ord() function in Python accepts a string of length 1 as an argument and returns the unicode code point representation of the passed argument. 
     For example ord('B') returns 66 which is a unicode code point value of character ‘B’. 

     Python ord() function Example: -

     In the following example we are finding the unicode code point values of an integer, a character and a special character. 
     The first 128 unicode code points are same as ASCII values which means the unicode code points are same as the ASCII values
     of these passed strings of length 1.

     # unicode code point of integer
     print("The ASCII value of 9 is",ord('9'))

     # unicode code point of alphabet
     print("The ASCII value of B is",ord('B'))

     # unicode code point of special character
     print("The ASCII value of ! is",ord('!'))